# Generated by Django 3.2.8 on 2021-10-09 19:38

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0062_comment_models_and_pagesubscription'),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailyReflectionPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('reflection_date', models.DateField(max_length=254, verbose_name='Reflection Date')),
                ('scripture', models.CharField(max_length=254, verbose_name='Scripture')),
                ('content', wagtail.core.fields.StreamField([('paragraph_block', wagtail.core.blocks.RichTextBlock(editor='simple', icon='fa-paragraph', template='blocks/paragraph_block.html'))], verbose_name='Main Content')),
                ('additional_resources', wagtail.core.fields.StreamField([('paragraph_block', wagtail.core.blocks.RichTextBlock(editor='simple', icon='fa-paragraph', template='blocks/paragraph_block.html'))], blank=True, help_text='optional additional resources (references, etc.)', verbose_name='Additional Resources')),
            ],
            options={
                'verbose_name': 'Daily Reflection',
                'verbose_name_plural': 'Daily Reflections',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DevotionalTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='reflections.dailyreflectionpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reflections_devotionaltag_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dailyreflectionpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='reflections.DevotionalTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
